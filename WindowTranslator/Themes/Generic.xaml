<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="clr-namespace:WindowTranslator.Behaviors"
    xmlns:control="clr-namespace:WindowTranslator.Controls"
    xmlns:data="clr-namespace:WindowTranslator.Data"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:root="clr-namespace:WindowTranslator;assembly=WindowTranslator.Abstractions"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Wpf.Ui;component/Controls/TextBox/TextBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type control:OverlayTextsControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type control:OverlayTextsControl}">
                    <ItemsControl
                        Width="{TemplateBinding RectWidth}"
                        Height="{TemplateBinding RectHeight}"
                        ItemsSource="{TemplateBinding Texts}">
                        <ItemsControl.Resources>
                            <data:NullToDoubleConverter
                                x:Key="n2dConv"
                                NotNullValue="1.0"
                                NullValue="0.5" />
                            <data:SizeToCornerRadiusConverter
                                x:Key="s2crConv"
                                MaxValue="10"
                                MinValue="2"
                                ScaleFactor="0.15" />
                        </ItemsControl.Resources>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type root:TextRect}">
                                <Border
                                    MinWidth="{Binding Width}"
                                    MinHeight="{Binding Height}"
                                    MaxWidth="{Binding MaxWidth}"
                                    Padding="2"
                                    Background="{Binding Background, Converter={x:Static data:DrawingColorToBrushConverter.Default}}"
                                    BorderBrush="#40000000"
                                    BorderThickness="2"
                                    ClipToBounds="True"
                                    CornerRadius="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource s2crConv}}"
                                    Opacity="{Binding TranslatedText, Converter={StaticResource n2dConv}}">
                                    <Border.Resources>
                                        <data:NullToDataTemplateConverter x:Key="b2dtConv">
                                            <data:NullToDataTemplateConverter.NotNullContent>
                                                <DataTemplate DataType="{x:Type root:TextRect}">
                                                    <TextBlock
                                                        Width="{Binding Converter={x:Static data:TextOverlayWidthConverter.Default}}"
                                                        VerticalAlignment="Center"
                                                        FontSize="{Binding FontSize}"
                                                        Foreground="{Binding Foreground, Converter={x:Static data:DrawingColorToBrushConverter.Default}}"
                                                        Text="{Binding TranslatedText}"
                                                        TextWrapping="Wrap">
                                                        <i:Interaction.Behaviors>
                                                            <b:FontSizeToOffsetYBehavior />
                                                        </i:Interaction.Behaviors>
                                                    </TextBlock>
                                                </DataTemplate>
                                            </data:NullToDataTemplateConverter.NotNullContent>
                                            <data:NullToDataTemplateConverter.NullContent>
                                                <DataTemplate DataType="{x:Type root:TextRect}">
                                                    <Viewbox
                                                        Width="{Binding Width}"
                                                        Height="{Binding Height}"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center">
                                                        <Path
                                                            Data="M 25,1 A 24,24 180 1 1 25,49"
                                                            Stroke="DodgerBlue"
                                                            StrokeThickness="2">
                                                            <Path.RenderTransform>
                                                                <RotateTransform CenterX="25" CenterY="25" />
                                                            </Path.RenderTransform>
                                                            <Path.Triggers>
                                                                <EventTrigger RoutedEvent="Path.Loaded">
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimation
                                                                                RepeatBehavior="Forever"
                                                                                Storyboard.TargetProperty="RenderTransform.Angle"
                                                                                From="0"
                                                                                To="360"
                                                                                Duration="0:0:2" />
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger>
                                                            </Path.Triggers>
                                                        </Path>
                                                    </Viewbox>
                                                </DataTemplate>
                                            </data:NullToDataTemplateConverter.NullContent>
                                        </data:NullToDataTemplateConverter>
                                    </Border.Resources>
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="{Binding Angle}" />
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                    <ContentControl Content="{Binding}" ContentTemplate="{Binding TranslatedText, Converter={StaticResource b2dtConv}}" />
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Canvas.Top" Value="{Binding Y}" />
                                <Setter Property="Canvas.Left" Value="{Binding X}" />
                                <Setter Property="Visibility">
                                    <Setter.Value>
                                        <MultiBinding Converter="{x:Static data:TextOverlayVisibilityConverter.Default}">
                                            <Binding Path="" />
                                            <Binding Path="MousePos" RelativeSource="{RelativeSource AncestorType=control:OverlayTextsControl}" />
                                            <Binding Path="Scale" RelativeSource="{RelativeSource AncestorType=control:OverlayTextsControl}" />
                                            <Binding Path="IsSwapVisibility" RelativeSource="{RelativeSource AncestorType=control:OverlayTextsControl}" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.LayoutTransform>
                            <ScaleTransform ScaleX="{Binding Scale, RelativeSource={RelativeSource Mode=TemplatedParent}}" ScaleY="{Binding Scale, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </ItemsControl.LayoutTransform>
                    </ItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--
        This Source Code Form is subject to the terms of the MIT License.
        If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
        Copyright (C) Leszek Pomianowski and WPF UI Contributors.
        All Rights Reserved.
        
        Based on Microsoft XAML for Win UI
        Copyright (c) Microsoft Corporation. All Rights Reserved.
    -->
    <Style TargetType="{x:Type control:ShortcutBox}">
        <!--  Universal WPF UI focus  -->
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <!--  Universal WPF UI focus  -->
        <!--  Universal WPF UI ContextMenu  -->
        <Setter Property="ContextMenu" Value="{DynamicResource DefaultControlContextMenu}" />
        <!--  Universal WPF UI ContextMenu  -->
        <Setter Property="Foreground" Value="{DynamicResource TextControlForeground}" />
        <Setter Property="CaretBrush" Value="{DynamicResource TextControlForeground}" />
        <Setter Property="Background" Value="{DynamicResource TextControlBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextControlElevationBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource TextBoxBorderThemeThickness}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="MinHeight" Value="{DynamicResource TextControlThemeMinHeight}" />
        <Setter Property="MinWidth" Value="{DynamicResource TextControlThemeMinWidth}" />
        <Setter Property="Padding" Value="{DynamicResource TextControlThemePadding}" />
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="ClearButtonEnabled" Value="True" />
        <Setter Property="IconPlacement" Value="Left" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsTextSelectionEnabled" Value="False">
                <Setter Property="Template" Value="{StaticResource DefaultUiTextBoxControlTemplate}" />
            </Trigger>
            <Trigger Property="IsTextSelectionEnabled" Value="True">
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template" Value="{StaticResource DefaultUiTextBoxTextSelectionEnabledControlTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
